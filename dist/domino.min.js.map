{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","domino.js","src/domino.js","src/patch.js","src/util.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","domino","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","node","arguments","undefined","document","_util","getNode","index","findIndex","dominos","dom","getVNode","Domino","push","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_patch","_patch2","MutationObserver","WebKitMutationObserver","observerOptions","childList","attributes","characterData","subtree","vnode","cloneNode","observer","onChange","bind","observe","disconnect","renderer","render","updateDOM","dispatchEvent","createEvent","contains","update","destroy","splice","./patch","./util","2","patch","nodeType","nodeName","parentNode","replaceChild","data","nodeChildNodes","childNodes","vnodeChildNodes","Math","min","isEqualNode","nodeAttrs","vnodeAttrs","_i","removeChild","frag","createDocumentFragment","_i2","appendChild","_i3","name","hasAttribute","removeAttribute","_i4","attr","_name","getAttribute","setAttribute","3","querySelector","documentElement","arr","fn","len","root","el","compareDocumentPosition","frame","cancelAnimationFrame","batch","requestAnimationFrame","shift","type","supportsEventConstructors","CustomEvent","bubbles","cancelable","evt","initCustomEvent"],"mappings":"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","file":"domino.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*! domino v0.1.0 | https://github.com/ryanmorr/domino */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.domino = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * Import dependencies\r\nn\n\nvar _patch = require('./patch');\n\nvar _patch2 = _interopRequireDefault(_patch);\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Cache of all `Domino` instances\r\n */\nvar dominos = [];\n\n/**\r\n * Get the supported `MutationObserver`\r\n */\nvar MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n\n/**\r\n * MutationObserver options\r\n */\nvar observerOptions = {\n    childList: true,\n    attributes: true,\n    characterData: true,\n    subtree: true\n};\n\n/**\r\n * Virtual DOM class\r\n *\r\n * @class Domino\r\n * @api private\r\n */\n\nvar Domino = function () {\n\n    /**\r\n     * Instantiate the class providing the\r\n     * DOM node to create a virtual DOM clone\r\n     * out of\r\n     *\r\n     * @constructor\r\n     * @param {Node|String} node\r\n     * @api private\r\n     */\n    function Domino(node) {\n        _classCallCheck(this, Domino);\n\n        this.node = (0, _util.getNode)(node);\n        this.vnode = this.node.cloneNode(true);\n        this.observer = new MutationObserver(this.onChange.bind(this));\n        this.observer.observe(this.vnode, observerOptions);\n    }\n\n    /**\r\n     * Disconnect the mutation observer\r\n     * and nullify the properties\r\n     *\r\n     * @api private\r\n     */\n\n\n    _createClass(Domino, [{\n        key: 'destroy',\n        value: function destroy() {\n            if (this.observer) {\n                this.observer.disconnect();\n                this.observer = this.node = this.vnode = null;\n            }\n        }\n\n        /**\r\n         * Get the source DOM node\r\n         *\r\n         * @return {Node}\r\n         * @api private\r\n         */\n\n    }, {\n        key: 'getNode',\n        value: function getNode() {\n            return this.node;\n        }\n\n        /**\r\n         * Get the virtual DOM node\r\n         *\r\n         * @return {Node}\r\n         * @api private\r\n         */\n\n    }, {\n        key: 'getVNode',\n        value: function getVNode() {\n            return this.vnode;\n        }\n\n        /**\r\n         * Schedule a frame to update the\r\n         * source DOM tree\r\n         *\r\n         * @api private\r\n         */\n\n    }, {\n        key: 'update',\n        value: function update() {\n            if (!this.renderer) {\n                this.renderer = this.render.bind(this);\n                (0, _util.updateDOM)(this.renderer);\n            }\n        }\n\n        /**\r\n         * Render the changes of the virtual\r\n         * DOM tree to the source DOM tree\r\n         *\r\n         * @api private\r\n         */\n\n    }, {\n        key: 'render',\n        value: function render() {\n            this.renderer = null;\n            (0, _patch2.default)(this.node, this.vnode);\n            this.getNode().dispatchEvent((0, _util.createEvent)('patch'));\n        }\n\n        /**\r\n         * Called anytime a change is made to\r\n         * the virtual DOM tree\r\n         *\r\n         * @api private\r\n         */\n\n    }, {\n        key: 'onChange',\n        value: function onChange() {\n            if ((0, _util.contains)(document, this.getNode())) {\n                this.update();\n                return;\n            }\n            this.render();\n        }\n    }]);\n\n    return Domino;\n}();\n\n/**\r\n * Factory function for creating\r\n * `Domino` instances\r\n *\r\n * @param {Node|String} node (optional)\r\n * @return {Domino}\r\n * @api public\r\n */\n\n\nfunction domino() {\n    var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\n    node = (0, _util.getNode)(node);\n    var index = (0, _util.findIndex)(dominos, function (dom) {\n        return dom.getNode() === node;\n    });\n    if (index !== -1) {\n        return dominos[index].getVNode();\n    }\n    var dom = new Domino(node);\n    dominos.push(dom);\n    return dom.getVNode();\n}\n\n/**\r\n * Stop future updates\r\n *\r\n * @param {Node} node\r\n * @api public\r\n */\ndomino.destroy = function destroy(node) {\n    var index = (0, _util.findIndex)(dominos, function (dom) {\n        return dom.getVNode() === node;\n    });\n    if (index !== -1) {\n        var dom = dominos[index];\n        dom.destroy();\n        dominos.splice(index, 1);\n    }\n};\n\n/**\r\n * Export the `domino` function\r\n */\nexports.default = domino;\nmodule.exports = exports['default'];\n\n},{\"./patch\":2,\"./util\":3}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = patch;\n/**\r\n * Patch a source node to match\r\n * the virtual node\r\n *\r\n * @param {Node} node\r\n * @param {Node} vnode\r\n * @api private\r\n */\nfunction patch(node, vnode) {\n    if (node.nodeType !== vnode.nodeType || node.nodeName !== vnode.nodeName) {\n        node.parentNode.replaceChild(vnode.cloneNode(true), node);\n        return;\n    }\n    if (vnode.nodeType === 3) {\n        var data = vnode.data;\n        if (node.data !== data) {\n            node.data = data;\n        }\n        return;\n    }\n    var nodeChildNodes = node.childNodes;\n    var vnodeChildNodes = vnode.childNodes;\n    for (var i = Math.min(nodeChildNodes.length, vnodeChildNodes.length) - 1; i >= 0; i--) {\n        patch(nodeChildNodes[i], vnodeChildNodes[i]);\n    }\n    if (!node.isEqualNode(vnode)) {\n        var nodeAttrs = node.attributes;\n        var vnodeAttrs = vnode.attributes;\n        if (nodeChildNodes.length > vnodeChildNodes.length) {\n            for (var _i = nodeChildNodes.length - 1; _i >= vnodeChildNodes.length; _i--) {\n                node.removeChild(nodeChildNodes[_i]);\n            }\n        } else if (nodeChildNodes.length < vnodeChildNodes.length) {\n            var frag = document.createDocumentFragment();\n            for (var _i2 = nodeChildNodes.length; _i2 < vnodeChildNodes.length; _i2++) {\n                frag.appendChild(vnodeChildNodes[_i2].cloneNode(true));\n            }\n            node.appendChild(frag);\n        }\n        for (var _i3 = nodeAttrs.length - 1; _i3 >= 0; _i3--) {\n            var name = nodeAttrs[_i3].name;\n            if (!vnode.hasAttribute(name)) {\n                node.removeAttribute(name);\n            }\n        }\n        for (var _i4 = vnodeAttrs.length - 1; _i4 >= 0; _i4--) {\n            var attr = vnodeAttrs[_i4];\n            var _name = attr.name;\n            var value = attr.value;\n            if (node.getAttribute(_name) !== value) {\n                node.setAttribute(_name, value);\n            }\n        }\n    }\n}\nmodule.exports = exports[\"default\"];\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getNode = getNode;\nexports.findIndex = findIndex;\nexports.contains = contains;\nexports.updateDOM = updateDOM;\nexports.createEvent = createEvent;\n/**\r\n * Common variables\r\n */\nvar frame = void 0;\nvar batch = [];\n\n/**\r\n * Feature test support for creating\r\n * event via Event constructors\r\n */\nvar supportsEventConstructors = function () {\n    try {\n        new CustomEvent('foo'); // eslint-disable-line no-new\n        return true;\n    } catch (e) {\n        return false;\n    }\n}();\n\n/**\r\n * Resolve a DOM node to return\r\n * an element node\r\n *\r\n * @param {Node|String} node\r\n * @return {Node}\r\n * @api private\r\n */\nfunction getNode(node) {\n    if (typeof node === 'string') {\n        return document.querySelector(node);\n    }\n    return node.nodeType === 9 ? node.documentElement : node;\n}\n\n/**\r\n * Search an array for the first item\r\n * that satisfies a given condition and\r\n * return its index\r\n *\r\n * @param {Array} arr\r\n * @param {Function} fn\r\n * @return {Number}\r\n * @api public\r\n */\nfunction findIndex(arr, fn) {\n    if ('findIndex' in arr) {\n        return arr.findIndex(fn);\n    }\n    for (var i = 0, len = arr.length; i < len; i++) {\n        if (fn.call(arr[i], arr[i], i, arr)) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/**\r\n * Does the provided root element contain\r\n * the provided node\r\n *\r\n * @param {Element} root\r\n * @param {Element} el\r\n * @return {Boolean}\r\n * @api private\r\n */\nfunction contains(root, el) {\n    if ('contains' in root) {\n        return root.contains(el);\n    }\n    return !!(root.compareDocumentPosition(el) & 16);\n}\n\n/**\r\n * Use `requestAnimationFrame` to\r\n * batch DOM updates to boost\r\n * performance\r\n *\r\n * @param {Function} fn\r\n * @api private\r\n */\nfunction updateDOM(fn) {\n    if (frame) {\n        cancelAnimationFrame(frame);\n    }\n    batch.push(fn);\n    frame = requestAnimationFrame(function () {\n        frame = null;\n        var render = void 0;\n        while (render = batch.shift()) {\n            render();\n        }\n    });\n}\n\n/**\r\n * Create a custom event to dispatch\r\n * on an element\r\n *\r\n * @param {String} type\r\n * @return {Event}\r\n * @api private\r\n */\nfunction createEvent(type) {\n    if (supportsEventConstructors) {\n        return new CustomEvent(type, { bubbles: false, cancelable: false });\n    }\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(type, false, false, null);\n    return evt;\n}\n\n},{}]},{},[1])(1)\n});\n\n","/**\r\n * Import dependencies\r\n */\r\nimport patch from './patch';\r\nimport { getNode, findIndex, contains, updateDOM, createEvent } from './util';\r\n\r\n/**\r\n * Cache of all `Domino` instances\r\n */\r\nconst dominos = [];\r\n\r\n/**\r\n * Get the supported `MutationObserver`\r\n */\r\nconst MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\r\n\r\n/**\r\n * MutationObserver options\r\n */\r\nconst observerOptions = {\r\n    childList: true,\r\n    attributes: true,\r\n    characterData: true,\r\n    subtree: true\r\n};\r\n\r\n/**\r\n * Virtual DOM class\r\n *\r\n * @class Domino\r\n * @api private\r\n */\r\nclass Domino {\r\n\r\n    /**\r\n     * Instantiate the class providing the\r\n     * DOM node to create a virtual DOM clone\r\n     * out of\r\n     *\r\n     * @constructor\r\n     * @param {Node|String} node\r\n     * @api private\r\n     */\r\n    constructor(node) {\r\n        this.node = getNode(node);\r\n        this.vnode = this.node.cloneNode(true);\r\n        this.observer = new MutationObserver(this.onChange.bind(this));\r\n        this.observer.observe(this.vnode, observerOptions);\r\n    }\r\n\r\n    /**\r\n     * Disconnect the mutation observer\r\n     * and nullify the properties\r\n     *\r\n     * @api private\r\n     */\r\n    destroy() {\r\n        if (this.observer) {\r\n            this.observer.disconnect();\r\n            this.observer = this.node = this.vnode = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the source DOM node\r\n     *\r\n     * @return {Node}\r\n     * @api private\r\n     */\r\n    getNode() {\r\n        return this.node;\r\n    }\r\n\r\n    /**\r\n     * Get the virtual DOM node\r\n     *\r\n     * @return {Node}\r\n     * @api private\r\n     */\r\n    getVNode() {\r\n        return this.vnode;\r\n    }\r\n\r\n    /**\r\n     * Schedule a frame to update the\r\n     * source DOM tree\r\n     *\r\n     * @api private\r\n     */\r\n    update() {\r\n        if (!this.renderer) {\r\n            this.renderer = this.render.bind(this);\r\n            updateDOM(this.renderer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render the changes of the virtual\r\n     * DOM tree to the source DOM tree\r\n     *\r\n     * @api private\r\n     */\r\n    render() {\r\n        this.renderer = null;\r\n        patch(this.node, this.vnode);\r\n        this.getNode().dispatchEvent(createEvent('patch'));\r\n    }\r\n\r\n    /**\r\n     * Called anytime a change is made to\r\n     * the virtual DOM tree\r\n     *\r\n     * @api private\r\n     */\r\n    onChange() {\r\n        if (contains(document, this.getNode())) {\r\n            this.update();\r\n            return;\r\n        }\r\n        this.render();\r\n    }\r\n}\r\n\r\n/**\r\n * Factory function for creating\r\n * `Domino` instances\r\n *\r\n * @param {Node|String} node (optional)\r\n * @return {Domino}\r\n * @api public\r\n */\r\nfunction domino(node = document) {\r\n    node = getNode(node);\r\n    const index = findIndex(dominos, (dom) => dom.getNode() === node);\r\n    if (index !== -1) {\r\n        return dominos[index].getVNode();\r\n    }\r\n    const dom = new Domino(node);\r\n    dominos.push(dom);\r\n    return dom.getVNode();\r\n}\r\n\r\n/**\r\n * Stop future updates\r\n *\r\n * @param {Node} node\r\n * @api public\r\n */\r\ndomino.destroy = function destroy(node) {\r\n    const index = findIndex(dominos, (dom) => dom.getVNode() === node);\r\n    if (index !== -1) {\r\n        const dom = dominos[index];\r\n        dom.destroy();\r\n        dominos.splice(index, 1);\r\n    }\r\n};\r\n\r\n/**\r\n * Export the `domino` function\r\n */\r\nexport default domino;\r\n","/**\r\n * Patch a source node to match\r\n * the virtual node\r\n *\r\n * @param {Node} node\r\n * @param {Node} vnode\r\n * @api private\r\n */\r\nexport default function patch(node, vnode) {\r\n    if (node.nodeType !== vnode.nodeType || node.nodeName !== vnode.nodeName) {\r\n        node.parentNode.replaceChild(vnode.cloneNode(true), node);\r\n        return;\r\n    }\r\n    if (vnode.nodeType === 3) {\r\n        const data = vnode.data;\r\n        if (node.data !== data) {\r\n            node.data = data;\r\n        }\r\n        return;\r\n    }\r\n    const nodeChildNodes = node.childNodes;\r\n    const vnodeChildNodes = vnode.childNodes;\r\n    for (let i = Math.min(nodeChildNodes.length, vnodeChildNodes.length) - 1; i >= 0; i--) {\r\n        patch(nodeChildNodes[i], vnodeChildNodes[i]);\r\n    }\r\n    if (!node.isEqualNode(vnode)) {\r\n        const nodeAttrs = node.attributes;\r\n        const vnodeAttrs = vnode.attributes;\r\n        if (nodeChildNodes.length > vnodeChildNodes.length) {\r\n            for (let i = nodeChildNodes.length - 1; i >= vnodeChildNodes.length; i--) {\r\n                node.removeChild(nodeChildNodes[i]);\r\n            }\r\n        } else if (nodeChildNodes.length < vnodeChildNodes.length) {\r\n            const frag = document.createDocumentFragment();\r\n            for (let i = nodeChildNodes.length; i < vnodeChildNodes.length; i++) {\r\n                frag.appendChild(vnodeChildNodes[i].cloneNode(true));\r\n            }\r\n            node.appendChild(frag);\r\n        }\r\n        for (let i = nodeAttrs.length - 1; i >= 0; i--) {\r\n            const name = nodeAttrs[i].name;\r\n            if (!vnode.hasAttribute(name)) {\r\n                node.removeAttribute(name);\r\n            }\r\n        }\r\n        for (let i = vnodeAttrs.length - 1; i >= 0; i--) {\r\n            const attr = vnodeAttrs[i];\r\n            const name = attr.name;\r\n            const value = attr.value;\r\n            if (node.getAttribute(name) !== value) {\r\n                node.setAttribute(name, value);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Common variables\r\n */\r\nlet frame;\r\nconst batch = [];\r\n\r\n/**\r\n * Feature test support for creating\r\n * event via Event constructors\r\n */\r\nconst supportsEventConstructors = (() => {\r\n    try {\r\n        new CustomEvent('foo'); // eslint-disable-line no-new\r\n        return true;\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n})();\r\n\r\n/**\r\n * Resolve a DOM node to return\r\n * an element node\r\n *\r\n * @param {Node|String} node\r\n * @return {Node}\r\n * @api private\r\n */\r\nexport function getNode(node) {\r\n    if (typeof node === 'string') {\r\n        return document.querySelector(node);\r\n    }\r\n    return node.nodeType === 9 ? node.documentElement : node;\r\n}\r\n\r\n/**\r\n * Search an array for the first item\r\n * that satisfies a given condition and\r\n * return its index\r\n *\r\n * @param {Array} arr\r\n * @param {Function} fn\r\n * @return {Number}\r\n * @api public\r\n */\r\nexport function findIndex(arr, fn) {\r\n    if ('findIndex' in arr) {\r\n        return arr.findIndex(fn);\r\n    }\r\n    for (let i = 0, len = arr.length; i < len; i++) {\r\n        if (fn.call(arr[i], arr[i], i, arr)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\n/**\r\n * Does the provided root element contain\r\n * the provided node\r\n *\r\n * @param {Element} root\r\n * @param {Element} el\r\n * @return {Boolean}\r\n * @api private\r\n */\r\nexport function contains(root, el) {\r\n    if ('contains' in root) {\r\n        return root.contains(el);\r\n    }\r\n    return !!(root.compareDocumentPosition(el) & 16);\r\n}\r\n\r\n/**\r\n * Use `requestAnimationFrame` to\r\n * batch DOM updates to boost\r\n * performance\r\n *\r\n * @param {Function} fn\r\n * @api private\r\n */\r\nexport function updateDOM(fn) {\r\n    if (frame) {\r\n        cancelAnimationFrame(frame);\r\n    }\r\n    batch.push(fn);\r\n    frame = requestAnimationFrame(() => {\r\n        frame = null;\r\n        let render;\r\n        while ((render = batch.shift())) {\r\n            render();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Create a custom event to dispatch\r\n * on an element\r\n *\r\n * @param {String} type\r\n * @return {Event}\r\n * @api private\r\n */\r\nexport function createEvent(type) {\r\n    if (supportsEventConstructors) {\r\n        return new CustomEvent(type, {bubbles: false, cancelable: false});\r\n    }\r\n    const evt = document.createEvent('CustomEvent');\r\n    evt.initCustomEvent(type, false, false, null);\r\n    return evt;\r\n}\r\n"],"sourceRoot":"/source/"}